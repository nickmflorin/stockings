generator client {
  provider        = "prisma-client-js"
  previewFeatures = []
  output          = "./model/generated"
}

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL") // Uses Connection Pooling
}

model User {
  id                    String          @id @default(auto()) @map("_id") @db.ObjectId
  clerkId               String          @unique
  firstName             String
  lastName              String
  profileImageUrl       String?
  emailAddress          String
  createdAt             DateTime        @default(now())
  updatedAt             DateTime        @updatedAt
  createdProducts       Product[]       @relation("createdProducts")
  updatedProducts       Product[]       @relation("updatedProducts")
  createdProductRecords ProductRecord[] @relation("createdProductRecords")
  updatedProductRecords ProductRecord[] @relation("updatedProductRecords")
}

enum ProductStatus {
  OUT_OF_STOCK
  IN_STOCK
  NOT_LISTED
}

model ProductRecord {
  id          String        @id @default(auto()) @map("_id") @db.ObjectId
  timestamp   DateTime      @default(now())
  createdBy   User          @relation("createdProductRecords", fields: [createdById], references: [id])
  createdById String        @db.ObjectId
  updatedBy   User          @relation("updatedProductRecords", fields: [updatedById], references: [id])
  updatedById String        @db.ObjectId
  price       Float
  rawPrice    String
  status      ProductStatus
}

model Product {
  id          String   @id @default(auto()) @map("_id") @db.ObjectId
  createdAt   DateTime @default(now())
  createdBy   User     @relation("createdProducts", fields: [createdById], references: [id])
  createdById String   @db.ObjectId
  updatedAt   DateTime @updatedAt
  updatedBy   User     @relation("updatedProducts", fields: [updatedById], references: [id])
  updatedById String   @db.ObjectId
  name        String   @unique
  slug        String   @unique
  imageSrc    String
}
