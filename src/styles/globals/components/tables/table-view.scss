@use "partials" as partials;
@use "./constants" as constants;

@mixin control-bar-flex() {
  display: flex;
  flex-direction: row;
  align-items: center;
  gap: theme("spacing.4");
}

.table-view {
  width: 100%;
  flex-direction: column;
  display: flex;
  max-height: 100%;
  height: 100%;
  position: relative;
  max-height: 100%;
  overflow: auto;
  min-height: 0;
  gap: theme("spacing.4");

  > .table-view__header {
    width: 100%;
    display: flex;
    flex-direction: column;
    gap: theme("spacing.4");

    .table-view__control-bar {
      @include control-bar-flex();
      width: 100%;
      // The left padding is to get the checkbox in the action bar to vertically align with the
      // checkboxes in the table rows.
      padding-left: 14px;
      height: 32px;
      justify-content: space-between;

      > .table-view__control-bar__left {
        @include control-bar-flex();
        /* The purpose of the wrapper is to wrap the checkbox in a square box that is the same
           dimensions as the icon buttons inside the control bar, which allows the gap to apply
           the same visual spacing between the checkbox and the actions as it does between the
           actions themselves. */
        > .table-view__control-bar__checkbox-wrapper {
          display: flex;
          align-items: center;
          justify-content: center;
          height: 100%;
          width: auto;
          aspect-ratio: 1;
        }

        > .table-view__control-bar-actions {
          display: flex;
          flex-direction: row;
          gap: theme("spacing.4");
          align-items: center;
          flex-grow: 1;
        }
      }
    }

    > .table-view__control-bar__right {
      @include control-bar-flex();
    }
  }

  > .table-view__content {
    flex-grow: 1;
    position: relative;
    min-height: 0;
    flex-direction: column;
    display: flex;

    > .MuiTableContainer-root {
      border: 1px solid constants.$table-header-bg-color;
      @include partials.border-radius(theme("borderRadius.sm"));
      // The reasoning is unclear, but it appears that the border-radius property must be applied
      // to work on Safari or iOS devices, whereas the clip-path property must be defined to
      // work on Chrome.
      @include partials.clip-path-radius(theme("borderRadius.sm"));
    }
  }

  > .table-view__footer {
    width: 100%;
  }
}
